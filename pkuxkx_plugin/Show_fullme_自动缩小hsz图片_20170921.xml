<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on 星期一, 十一月 09, 2009, 4:33 下午 -->
<!-- MuClient version 4.43 -->

<!-- Plugin "Show_fullme_CODE_v2_3" generated by Plugin Wizard -->

<!--
更新版本2.3
图片大小自适应
历史图片快捷浏览
-->

<muclient>
<plugin
   name="Show_fullme_CODE_oem"
   author="休莱格(suineg)"
   id="59ce537b959b1408ebb71918"
   language="Lua"
   purpose="Fullme优化插件(休莱格基于腊八粥基于ddid插件修改)"
   save_state="y"
   date_written="2017-9-21 21:00:00"
   requires="4.43"
   version="1.3"
   >
<description trim="y">
<![CDATA[
开一个小窗口，显示 fullme 的验证码。
验证码输入完毕后，小窗口自动关闭。
强制关闭该窗口，使用close_fullme命令。
要求 MUSHClient 版本在 4.43 以上！
Ctrl+PageUp 前翻
Ctrl+PageDown 后翻
Ctrl+End 最后一张
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="/Users/shanghua/MUSHclient/worlds/plugins/constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   group="fullme"
   match="^http://pkuxkx.net/antirobot/.+$"
   name="fullme_code_from_web"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>show_fullme_code_from_web("%0")</send>
  </trigger>
  <trigger
   enabled="y"
   group="fullme"
   match="^也许是上天垂青于你的勤奋和努力吧"
   name="close_fullme_1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>close_window()</send>
  </trigger>
  <trigger
   enabled="y"
   group="fullme"
   match="^太遗憾了。$"
   name="close_fullme_2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>close_window()</send>
  </trigger>
  <trigger
   enabled="y"
   group="fullme"
   match="^还是用这个命令，指令格式: fullme 验证码$"
   name="set_fullme_prefix_1"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>set_fullme_prefix()</send>
  </trigger>
  <trigger
   enabled="y"
   group="fullme"
   match="^好像什么都没有发生，但是又好像有什么事情做错了。再来一次试试！$"
   name="set_fullme_prefix_2"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>set_fullme_prefix()</send>
  </trigger>  
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   name="close_fullme"
   match="close_fullme"
   enabled="y"
   group="fullme"
   send_to="12"
   sequence="100"
  >
  <send>close_window()</send>
  </alias>
</aliases>

<!--  Script  -->


<script>
<![CDATA[

-- -- -- -- -- -- -- -- -- --
-- -- -- -- -- -- -- -- -- --
GLOBAL_URL = nil
PNG_list = {}
num_of_PNG = 0
PNG_fileno = 0
PNGState = nil
os.execute("del %temp%\\png\\"..GetWorldID().."\\*.* /q")
-- -- -- -- -- -- -- -- -- --
-- -- -- -- -- -- -- -- -- --
retry=0

--function show_fullme_code_from_web(web_url)
--GLOBAL_URL = web_url

function ParserUrl(strUrl, bCom)
	local jpg,png,html_entire_text,jpg_url = nil;
	local nRetry = 0;
	local bOk = false;
	while(nRetry<5)
	do
		while(true)
		do
			nRetry=nRetry+1;
			--Sleep(1);
			
			if html_entire_text == nil then
				html_entire_text = get_html_entire_text(strUrl) -- get the html text as a string from the url.
				if html_entire_text==nil then
					break;
				end
			end
			
			if jpg_url == nil then
				jpg_url = get_jpg_url(html_entire_text, bCom) -- get the .jpg file's url from the html text.
				if jpg_url==nil then
					break;
				end
			end
			
			if jpg == nil then
				jpg = download_jpg(jpg_url) -- download the .jpg file from the jpg's url, and save it as a variable in memeory.
				if jpg==nil then
					break;
				end
			end
			
			if png == nil then
				png = convert_image_to_png(jpg) -- convert the jpg image to png format's image and save it as a variable in memory.
				if png==nil then
					break;
				end
			end
			bOk = true;
			break;
		end
		if bOk then
			break;
		end
	end
	if bOk then
		local strType = "net";
		if bCom then
			strType = "com";
		end
	    Note("本次" .. strType .. "版fullme成功，共尝试"..nRetry.."次")
		draw_mini_window_fill_by_png(png, true)
	end
	return bOk
end

function show_fullme_code_from_web(web_url9999)
	-- GLOBAL_URL = string.gsub(web_url9999,"pkuxkx.net","211.154.198.9:9999")
	GLOBAL_URL = web_url9999;
	local strUrlCom = string.gsub(GLOBAL_URL, "pkuxkx.com", "pkuxkx.net");
	local bOk = ParserUrl(GLOBAL_URL);
	if bOk == false then
		strUrlCom = string.gsub(GLOBAL_URL, "pkuxkx.net", "pkuxkx.com");
		bOk = ParserUrl(GLOBAL_URL, true);
	end
	if bOk == false then
		Note("本次fullme失败！");
		OpenBrowser(GLOBAL_URL);
	end



end -- show_fullme_code(web_url)


function get_html_entire_text(from_web_url)
	local http = require("socket.http")
	http.TIMEOUT = 2
	local html_entire_text,e
    html_entire_text, e = http.request(from_web_url)
    return html_entire_text
end -- get_html_entire_text()
 

-- -- -- -- -- -- -- -- -- --

function get_jpg_url(from_html_text, bCom)

	if from_html_text == nil or from_html_text == "" then
		return nil
	end -- if
	
	local html_text, jpg_url
	
	local html_length = string.len(from_html_text)

	if html_length >= 25 then
		local strCom = "net";
		if bCom then
			strCom = "com"
		end
		jpg_url = string.match(from_html_text, "/b2evo_captcha_tmp.-jpg")
		if jpg_url==nil then return nil end	
		-- jpg_url = "http://211.154.198.9:9999/antirobot" .. jpg_url
		-- jpg_url = "http://pkuxkx.net/antirobot" .. jpg_url
		jpg_url = "http://pkuxkx." .. strCom .. "/antirobot" .. jpg_url
		
	else
		jpg_url = nil
		close_window()
--		Note("\n本插件靠“fullme”触发。“fullme验证码图片”仅在之后的1分钟内输入有效。")
--		Note("本插件不能正确获得Web页面文件。\n")	
	end -- if
	
	--print(jpg_url)

	return jpg_url
end -- get_jpg_url()


function download_jpg(from_jpg_url)
	local http = require("socket.http")
	http.TIMEOUT = 1
	local jpg_buffer,e
    jpg_buffer, e = http.request(from_jpg_url)
	return jpg_buffer
end -- download_jpg()
 

-- -- -- -- -- -- -- -- -- --

function convert_image_to_png(from_jpg_buffer)

	assert (package.loadlib ("luagd.dll", "luaopen_gd")) ()

	local img_buffer = gd.createFromJpegStr(from_jpg_buffer)
	if img_buffer==nil then return nil end
	local png_buffer = img_buffer:pngStr()
	if png_buffer==nil then return nil end

	os.execute("md %temp%\\png\\"..GetWorldID())
	pngname=os.getenv("temp").."\\png\\"..GetWorldID().."\\pkuxkx_"..GetUniqueID()..".png"
	table.insert(PNG_list,pngname)
	num_of_PNG = table.getn(PNG_list)
	PNG_fileno = num_of_PNG

	local f = assert(io.open(pngname , "wb"))
	f:write(png_buffer)
	f:close()
	

	return png_buffer
end -- convert_image_to_png(from_jpg)

-- -- -- -- -- -- -- -- -- --

function show_rollback()
	if PNGstate=="forward" then PNG_fileno = PNG_fileno-2 end
    if PNG_fileno>num_of_PNG then PNG_fileno=num_of_PNG end
    if PNG_fileno>0 then
		pngfile = PNG_list[PNG_fileno]
		local f = assert (io.open (pngfile, "rb"))
		local image_data = f:read ("*a")  -- read all of it
		f:close ()
		draw_mini_window_fill_by_png(image_data, false)
		PNG_fileno = PNG_fileno-1
		PNGstate="rollback"
	else
	    PNG_fileno=1
		PNGstate=nil
	    Note("之前显示的已是第一张")
		close_window()
	end
end

function show_forward()
	if PNGstate=="rollback" then PNG_fileno = PNG_fileno+2 end
    if PNG_fileno<1 then PNG_fileno=1 end
    if PNG_fileno <= num_of_PNG then
		pngfile = PNG_list[PNG_fileno]
		local f = assert (io.open (pngfile, "rb"))
		local image_data = f:read ("*a")  -- read all of it
		f:close ()
		draw_mini_window_fill_by_png(image_data, false)
		PNG_fileno = PNG_fileno+1
		PNGstate="forward"
	else
	    PNG_fileno = num_of_PNG
		PNGstate=nil
	    Note("之前显示的已是最后一张")
		close_window()
	end
end

function show_end()
    if num_of_PNG>0 then
		PNG_fileno = num_of_PNG
		pngfile = PNG_list[PNG_fileno]
		local f = assert (io.open (pngfile, "rb"))
		local image_data = f:read ("*a")  -- read all of it
		f:close ()
		draw_mini_window_fill_by_png(image_data,false)
		PNGstate=nil
	end
end

-- -- -- -- -- -- -- -- -- --

-- hide window on close
function close_window()
	
	if win ~= nil then
	
		local win_visible = WindowInfo (win, 6) --> get is it hidden now.

		if win_visible ~= nil then
  		WindowShow (win,  false)  -- hide it
  		Note ("The mini Window was closed.")
   	else
	  	Note ("There is not mini Window.")
  	end -- if win_visible ~= nil
  
  end -- if win ~= nil
  
end -- close_window()
-- -- -- -- -- -- -- -- -- -- 

function click_refresh (flags, hotspotid)
	
	print("Refreshing ...")
	print("刷新进行中 ...")
		
	show_fullme_code_from_web(GLOBAL_URL)
	
end -- click_refresh()

-- -- -- -- -- -- -- -- -- -- 

function click_close (flags, hotspotid)
  
	print("Closing ...")
	close_window()
	
end --  click_close()

-- -- -- -- -- -- -- -- -- -- 

function set_fullme_prefix()

	SetCommandSelection (1, -1)		--选取当前命令窗口中的命令
	PasteCommand ("halt;fullme ")			--替换为 "fullme "

end -- set_fullme_prefix()

-- -- -- -- -- -- -- -- -- -- 

function draw_mini_window_fill_by_png(png_buffer,showRefresh)

--   Script language="Lua"
--   To draw a mini Window and fill in a image.
-- -- -- -- -- -- -- --

	require "movewindow"  -- load the movewindow.lua module

-- configuration

-- window size in pixels
WINDOW_WIDTH = 306
WINDOW_HEIGHT = 146

-- size of border stroke
EDGE_WIDTH = 3 -- size of border stroke

-- where to put the window
WINDOW_POSITION = 5  -- see below

--[[
Useful positions:
0 = stretch to output view size
1 = stretch with aspect ratio
2 = strech to owner size
3 = stretch with aspect ratio
4 = top left
5 = center left-right at top
6 = top right
7 = on right, center top-bottom
8 = on right, at bottom
9 = center left-right at bottom
10 = on left, at bottom
11 = on left, center top-bottom
12 = centre all
13 = tile
--]]


-- colours
WINDOW_BACKGROUND_COLOUR = ColourNameToRGB ("darkgray")
BOX_COLOUR = ColourNameToRGB ("royalblue") -- Box boarder's colour
WINDOW_TEXT_COLOUR = ColourNameToRGB ("black")

-- offset of text from edge
TEXT_INSET = 5

-- get a unique name
win = GetPluginID ()  -- get a unique name

windowinfo = movewindow.install (win, WINDOW_POSITION, 0)		--12 = center all

-- end configuration


-- Create the window
	WindowCreate (win, 
	              windowinfo.window_left, 
                windowinfo.window_top,
                WINDOW_WIDTH, 
                WINDOW_HEIGHT, 
                windowinfo.window_mode, 
                windowinfo.window_flags, 
                WINDOW_BACKGROUND_COLOUR
                )  -- create window

-- loade .png image from memory's variable
	WindowLoadImageMemory (win, "image1", png_buffer)
	WINDOW_WIDTH = WindowImageInfo(win, "image1", 2)
	WINDOW_HEIGHT = WindowImageInfo(win, "image1", 3)
	
	--print("窗口宽度："..WINDOW_WIDTH)
	if WINDOW_WIDTH>1200 then WINDOW_WIDTH=1200 end

-- RECreate the window
	WindowCreate (win, 
	              windowinfo.window_left, 
                windowinfo.window_top,
                WINDOW_WIDTH+6, 
                WINDOW_HEIGHT+46, 
                windowinfo.window_mode, 
                windowinfo.window_flags, 
                WINDOW_BACKGROUND_COLOUR
                )  -- create window

-- show fullme window on top of other windows
	WindowSetZOrder(win, 999)

-- add the drag handler so they can move the window around
	movewindow.add_drag_handler (win, 0, 0, 0, 0)

-- draw the border of the whole box
	WindowCircleOp (win, 2, 0, 0, 0, 0, BOX_COLOUR, 6, EDGE_WIDTH, 0x000000, 1) 



-- draw the .png image file into the window
	WindowDrawImage (win, "image1", 3, 3, -3, -43, miniwin.image_stretch)
--	WindowDrawImage (win, "image1", 3, 3, -3, -43, 1)
	
	--内边框
	WindowRectOp (win, 1, 3, 3, WINDOW_WIDTH+3, WINDOW_HEIGHT+3, ColourNameToRGB("gray"))

	--Panel
--	WindowRectOp (win, 5, 3, 102, -3, -3, 5, 15 + 0x800 + 0x1000 + 0x4000)
	WindowRectOp (win, 5, 3, WINDOW_HEIGHT+3, -3, -3, 5, 15 + 0x800 + 0x1000 + 0x4000)
	
	--刷新按钮
	if true == showRefresh then
		WindowLoadImage (win, "refresh_button", GetInfo(66).."refresh.png")
		WindowDrawImage (win, "refresh_button", WINDOW_WIDTH*0.2, WINDOW_HEIGHT+11, WINDOW_WIDTH*0.2+30, WINDOW_HEIGHT+41, miniwin.image_transparent_copy)

		WindowAddHotspot(win, "refresh_button",
  	               WINDOW_WIDTH*0.2, WINDOW_HEIGHT+11, WINDOW_WIDTH*0.2+30, WINDOW_HEIGHT+41,   -- rectangle
                   "", -- mouseover (do nothing)
                   "", -- cancelmouseover (do nothing)
                   "click_refresh",  -- mousedown event
                   "", -- cancelmousedown (do nothing)
                   "", -- mouseup (do nothing)
                   hint,  -- hint text if they hover over it              
                   1, 0)  -- hand cursor
	end

	--关闭按钮
	WindowLoadImage (win, "close_button", GetInfo(66).."stop.png")
	WindowDrawImage (win, "close_button", WINDOW_WIDTH*0.7, WINDOW_HEIGHT+11, WINDOW_WIDTH*0.7+30, WINDOW_HEIGHT+41, miniwin.image_transparent_copy)
	
	WindowAddHotspot(win, "close_button",
  	               WINDOW_WIDTH*0.7, WINDOW_HEIGHT+11, WINDOW_WIDTH*0.7+30, WINDOW_HEIGHT+41,   -- rectangle
                   "", -- mouseover (do nothing)
                   "", -- cancelmouseover (do nothing)
                   "click_close",  -- mousedown event
                   "", -- cancelmousedown (do nothing)
                   "", -- mouseup (do nothing)
                   hint,  -- hint text if they hover over it              
                   1, 0)  -- hand cursor
                   

-- ensure window visible
	WindowShow (win, true)

--	Note("The fullme code has been displayed in the centre mini window.")
--	Note(" fullme 验证码已被显示在中心的小窗口内。\n")

end -- draw_mini_window_fill_by_png()

-- -- -- -- -- -- -- -- -- --

AcceleratorTo ("Ctrl+PageUp", "show_rollback()",12)
AcceleratorTo ("Ctrl+PageDown", "show_forward()",12)
AcceleratorTo ("Ctrl+End", "show_end()",12)

]]>
</script>


<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="Show_fullme_CODE_v2_21:help"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>
